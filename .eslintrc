{
    "env": {
        "node": true,
        "browser": true,
        "amd": true,
        "jquery": true,
        "es6": true,
        "mocha": true
    },
    "globals": {
      "describe": true,
      "it": true,
      "beforeEach": true,
      "before": true,
      "afterEach": true,
      "after": true
    },
    "ecmaFeatures": {
        "jsx": true,
        "jsx-quotes": 1,
    },
    "plugins": [
        "react"
    ],
    "rules": {
        // Enforce === instead of ==; !== instead of !=
        "eqeqeq": 2,

        // Enforce if statement within 'for in'
        "guard-for-in": 2,

        // Disallow overwriting native types like 'Array' or 'Date'
        "no-extend-native": 2,

        // Enforce wrapping immediate invocations in parentheses
        "wrap-iife": 2,

        // Disallow usage of a variable before declaration; ignores functions
        "no-use-before-define": [2, "nofunc"],

        // Enforce capitalization of constructor functions
        "new-cap": 2,

        // Disallow creation of dense arrays using the Array constructor
        "no-array-constructor": 2,

        // Disallow use of the Object constructor
        "no-new-object": 2,

        // Disallow use of argument.caller and argument.callee
        "no-caller": 2,

        // Disallow empty block statements
        "no-empty": 2,

        // Disallow use of the with statement
        "no-with": 2,

        // Disallow mixed spaces and tabs for indentation
        "no-mixed-spaces-and-tabs": 2,

        // Disallow use of multiline strings
        "no-multi-str": 2,

        // Warn if variables are not named with camelCase
        "camelcase": 1,

        // Disallow trailing whitespace at the end of lines
        "no-trailing-spaces": 2,

        // Disallow spacing before commas; enforce spacing after commas
        "comma-spacing": [2, { "before": false, "after": true }],

        // Enforce spacing after keywords: if, else, for, while, do, switch, try,
        // catch, and finally
        "space-after-keywords": 2,

        // Enforce spacing before opening brace of block statements
        "space-before-blocks": [2, "always"],

        // Enforce spaceing around infix operators: +, -, :, ?
        "space-infix-ops": 2,

        // Enforce spacing around word unary operators: new, delete, typeof, void
        // Disallow spacing around non-word unary operators: -, +, --, ++, !, !!
        "space-unary-ops": [2, { "words": true, "nonwords": false }],

        // Disallow undeclared variables (unless mentioned in /*global ...*/ comment)
        "no-undef": 2,

        // Warn if single newline at end of file is missing
        "eol-last": 1,

        // Enforce single quotes for string literals
        "quotes": [2, "single"],

        // Disallow unnecessary parentheses
        "no-extra-parens": 0,

        // Disallow unnecessary semicolons
        "no-extra-semi": 2,

        // Disallow function or variable declarations in nested blocks
        "no-inner-declarations": 2,

        // Disallows the nesting of blocks more than 5 deep
        "max-depth": [2, 5],

        // Enforces a maximum of 10 parameters in a function declaration
        "max-params": [2, 10],

        // Enforces a maximum of 25 statements within a single function
        "max-statements": [2, 25],

        // Enforces a maximum of 100 characters in a single line; adjusts tabs
        // to equal 4 characters
        "max-len": [2, 100, 4],

        // Enforces semicolons at the end of statements
        "semi": 2,

        // Disallow function definitions of the form 'function myFunc() {'
        "func-style": [2, "expression"],

        // Warn about unused variables and arguments
        "no-unused-vars": [2],

        // --------------------
        // React specific rules
        // --------------------

        // Prevent missing displayName in a React component definition
        // "react/display-name": 1,

        // Enforce boolean attributes notation in JSX
        "react/jsx-boolean-value": 1,

        // Disallow undeclared variables in JSX
        "react/jsx-no-undef": 1,

        // Enforce propTypes declarations alphabetical sorting
        "react/jsx-sort-prop-types": 1,

        // Enforce props alphabetical sorting
        "react/jsx-sort-props": 1,

        // Prevent React to be incorrectly marked as unused
        "react/jsx-uses-react": 1,

        // Prevent variables used in JSX to be incorrectly marked as unused
        "react/jsx-uses-vars": 1,

        // Prevent usage of setState in componentDidMount
        "react/no-did-mount-set-state": 1,

        // Prevent usage of setState in componentDidUpdate
        "react/no-did-update-set-state": 1,

        // Prevent multiple component definition per file
        "react/no-multi-comp": 1,

        // Prevent usage of unknown DOM property
        "react/no-unknown-property": 1,

        // Prevent missing props validation in a React component definition
        "react/prop-types": 1,

        // Prevent missing React when using JSX
        "react/react-in-jsx-scope": 1,

        // Prevent extra closing tags for components without children
        "react/self-closing-comp": 1,

        // Enforce component methods order
        "react/sort-comp": 1,

        // Prevent missing parentheses around multilines JSX
        "react/wrap-multilines": 1
    }
}
